name: Pull Request Approval

on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review
      - review_requested
      - review_request_removed
      - labeled
      - unlabeled
      - closed
  pull_request_review:
    types:
      - submitted
      - edited
      - dismissed

jobs:
  merge_on_approval:
    runs-on: ubuntu-latest

    steps:
      - name: Checking for approval
        run: echo "Approval is required."

      - name: Get pull request information
        id: pr
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            return {
              pullRequestId: pullRequest.id,
              pullRequestNumber: pullRequest.number,
              author: pullRequest.user.login
            }

      - name: Check if Manager approved
        id: check_approval
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const approver = 'shayan-shaikh';
            const approved = reviews.some(review => review.user.login === approver && review.state === 'APPROVED');
            return {
              approved
            }
      - name: Exit with status
        if: ${{steps.check_approval.outputs.approved == true}}
        uses: actions/github-script@v6
        with:
          script:
            core.setFailed('Manager not yet approved')

        
  
